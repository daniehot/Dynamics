clear all  clc;



%Agents generals

% Wahrscheinlichkeit, dass ein Agent kommt
Prob_agentpertime=@(t) exp(t^2);
Data.N = 11; % Anzahl Agents
Data.number = (1:Data.N); % Nummerierung
Data.menu=zeros(Data.N,1); % Zeigt gewähltes Menu an
Data.cash=zeros(Data.N,1); % zeigt gewählte Kasse 
Data.coord=zeros(Data.N, 2); % Koordinaten x = 1 y = 2
Data.activ=zeros(Data.N,1) ; % Zeigt Welchen Ort (Essen oder Kass) er aufsucht

%Parameter
Essensausgabebereich=5;     % 
tend=1;                     % Stunden 11:30-13:30 SChlusseinstellung 2
b=2;                         %Breite
a=2;                         % Schrittweite
Prob_cash = [0.2 0.7 1];     % Beliebtheit der Menus
Prob_menu = [0.3 0.5 0.8 1];   % Gewählte Kasse
dt= 0.0002777777;           % Zeitschritt
Aktivagent=1;
t=0;

%Bild
A = imread('grundrissplan2.jpg','jpg')/255; % Altergrndrissplan Mensa
%initialize the arrays
n=size(A,1);
m=size(A,2);
z = zeros(n,m);
cells=A;
cells(1:45,140:150)=1;
cells(1:192,135:140)=2;
cells(1:192,1:5)=2;
cells()
%how long for each case to stability or simple oscillators

%build an image and display it
imh = image(cat(3,cells));
set(imh, 'erasemode', 'none')
%axis equal
%axis tight

%index definition for cell update
x = 1:m;
y = 1:n;

% Y : 1 Zeile X: 2. Zeile
startpoint= [180 ; 60];
endpoint(:,:,1)=[ 130; 130];    %Suppe
endpoint(:,:,2)=[150 ; 130];    %Pizza
endpoint(:,:,3)=[98;130];      %Menu1
endpoint(:,:,4)=[60;130];       %Spezial
endpoint(:,:,5)=[30;30];        %Cashnr1
endpoint(:,:,6)=[30;38];        %Cashnr2
endpoint(:,:,7)=[30;60];        %Cashnr3

for i=1:Data.N
Data.coord(i,1)=startpoint(1);
Data.coord(i,2)=startpoint(2);
end

while t<= tend
     %% Die Agents kommen zu einer Prob_agentpertime Wahrscheinlichkeit
     %% pro zeitiiiteration hinein
    if Aktivagent <= Data.N    
        if Data.activ(Aktivagent)==1
            Aktivagent=Aktivagent+1;  %INdex Aktivagent wird
            % Durch die Anzahl Agents durchgezählt
        elseif rand(1)<=Prob_agentpertime(t) % Bestimmt ob aktiviert oder
            % nicht
            Data.activ(Aktivagent)=1; %Aktivierung 
            [Data] = decision(Data,Prob_menu,Aktivagent); 

        end
        
    end
    
   
    %% Decision making
    % Ordnet allen Agents, welche eine Änderung in Data.activ erfahren
    % haben ein Menu resp Kasse zu
   
 
    %%%%%% Zellen aktuallisierung
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    for i=min(find(Data.activ==1)):max(find(Data.activ==1));
        if Data.activ(i)==1
    cells(Data.coord(i,1)-b:Data.coord(i,1)+b,Data.coord(i,2)-b:Data.coord(i,2)+b)=0;
       [Data]=Bewegung(Data,i,endpoint,b,a,cells)  ;
    cells(Data.coord(i,1)-b:Data.coord(i,1)+b,Data.coord(i,2)-b:Data.coord(i,2)+b)=1;
        end
        
    end  
    for i=min(find(Data.activ==2)):max(find(Data.activ==2));
        if Data.activ(i)==2
    cells(Data.coord(i,1)-b:Data.coord(i,1)+b,Data.coord(i,2)-b:Data.coord(i,2)+b)=0;
       [Data]=Bewegung(Data,i,endpoint,b,a,cells)  ;
    cells(Data.coord(i,1)-b:Data.coord(i,1)+b,Data.coord(i,2)-b:Data.coord(i,2)+b)=1;
        end
        
    end
    

    
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    
    %% Essensausgabe und Aktivierung für die Kasse
if sum(Data.activ==1)>=1; 
        
    for i=min(find(Data.activ==1)):max(find(Data.activ==1));
        if Data.activ(i)==1;
         Abstand=transpose(Data.coord(i,:))-endpoint(:,:,Data.menu(i));
            if (Abstand(1)^2+Abstand(2)^2)^0.5<=Essensausgabebereich;
             Data.activ(i)=2;
              [Data] = decision2(Data,Prob_cash,i);
            end; 
        end;
    end;
end;


     
  %Graphische Darstellung
        
        %set(imh, 'cdata', cat(3,cells,z,z) )
        image(A)
        hold on
        plot(image(cells))
    pause(0.001)
     t=t+dt;
end
